# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: ArchiveFiles@2
      displayName: 'Archive $(Build.ArtifactStagingDirectory)'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact: drop'
      inputs:
        artifact: drop
        targetPath: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
- stage: Deploy
  jobs:
  - job: ExtractFiles
    steps:
    - task: ExtractFiles@1
      displayName: 'Extract files '
      inputs:
            destinationFolder: '$(Pipeline.Workspace)/unzip'
            archiveFilePatterns: '$(Pipeline.Workspace)/drop/*.zip'
            cleanDestinationFolder: true 
  - deployment: "Deploy_ARM"
    displayName: "Deploy ARM"
    environment: "DEV"
    dependsOn: "Build"
    strategy:
      runOnce:
        deploy:
            steps:
            - task: AzureResourceGroupDeployment@2
              displayName: 'Resource Group Deployment'
              inputs:
                  azureSubscription: 'DEV'
                  resourceGroupName: 'rg-HDCDemo-ADOTest'
                  location: 'centralus'
                  csmFile: 'unzip\a\Infrastructure\HDCDemoApp\HDCDemoApp\azuredeploy.json'
                  csmParametersFile: 'unzip\a\Infrastructure\HDCDemoApp\HDCDemoApp\azuredeploy.parameters.dev.json'
