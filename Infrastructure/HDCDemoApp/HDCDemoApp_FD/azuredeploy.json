{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "backendAddress": {
      "type": "string",
      "metadata": {
        "description": "The hostname of the backend. Must be an IP address or FQDN."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev"
    }
  },
  "variables": {
    "frontdoorLocation": "global",
    "systemName": "HDCDemoApp",
    "systemNameshort": "[substring(toLower(variables('systemName')), 0, 6)]",
    "regionReference": {
      "centralus": "cus",
      "eastus": "eus",
      "westus": "wus"
    },
    "frontDoorName": "[toLower(concat('fd-', variables('systemName'),'-', parameters('environment'),'-',variables('regionDeployment')))]",
    "logAnalyticsName": "[toLower(concat('la-', variables('systemName'),'-', parameters('environment'),'-',variables('regionDeployment')))]",
    "regionDeployment": "gbl",
    "wafPolicyrg": "WebAppFirewall",
    "wafPolicyrgFullName": "[concat('rg-',variables('wafPolicyrg'),'-',parameters('environment'),'-',variables('regionDeployment'))]",
    "wafPolicyName": "BasicWebPolicy"

  },
  "resources": [
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/frontDoors",
      "name": "[variables('frontDoorName')]",
      "location": "[variables('frontdoorLocation')]",
      "tags": {},
      "properties": {
        "routingRules": [
          {
            "name": "routingRule1",
            "properties": {
              "frontendEndpoints": [
                {
                  "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('frontDoorName'), 'frontendEndpoint1')]"
                }
              ],
              "acceptedProtocols": [
                "Http",
                "Https"
              ],
              "patternsToMatch": [
                "/*"
              ],
              "routeConfiguration": {
                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                "forwardingProtocol": "MatchRequest",
                "backendPool": {
                  "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', variables('frontDoorName'), 'backendPool1')]"
                }
              },
              "enabledState": "Enabled"
            }
          }
        ],
        "healthProbeSettings": [
          {
            "name": "healthProbeSettings1",
            "properties": {
              "path": "/",
              "protocol": "Http",
              "intervalInSeconds": 120
            }
          }
        ],
        "loadBalancingSettings": [
          {
            "name": "loadBalancingSettings1",
            "properties": {
              "sampleSize": 4,
              "successfulSamplesRequired": 2
            }
          }
        ],
        "backendPools": [
          {
            "name": "backendPool1",
            "properties": {
              "backends": [
                {
                  "address": "[parameters('backendAddress')]",
                  "backendHostHeader": "[parameters('backendAddress')]",
                  "httpPort": 80,
                  "httpsPort": 443,
                  "weight": 50,
                  "priority": 1,
                  "enabledState": "Enabled"
                }
              ],
              "loadBalancingSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('frontDoorName'), 'loadBalancingSettings1')]"
              },
              "healthProbeSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('frontDoorName'), 'healthProbeSettings1')]"
              }
            }
          }
        ],
        "frontendEndpoints": [
          {
            "name": "frontendEndpoint1",
            "properties": {
              "hostName": "[concat(variables('frontDoorName'), '.azurefd.net')]",
              "sessionAffinityEnabledState": "Disabled",
              "webApplicationFirewallPolicyLink": {

                "id": "[resourceID(subscription().subscriptionid,variables('wafPolicyrgFullName'),'Microsoft.Network/frontdoorwebapplicationfirewallpolicies',variables('wafPolicyName'))]"
              }
            }
          }
        ],
        "enabledState": "Enabled"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[variables('logAnalyticsName')]",
      "tags": {
        "displayName": "Log Analytics",
        "ProjectName": "[variables('systemName')]"
      },
      "apiVersion": "2020-03-01-preview",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 120,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "microsoft.network/frontDoors/providers/diagnosticsettings",
      "name": "[concat(variables('frontDoorName'),'/Microsoft.Insights/diagnostics')]",
      "location": "[parameters('location')]",
      "apiVersion": "2017-05-01-preview",
      "dependsOn": [
        "[resourceID('Microsoft.OperationalInsights/workspaces',variables('logAnalyticsName'))]",
        "[resourceID('Microsoft.Network/frontdoors',variables('frontDoorName'))]"
      ],
      "properties": {
        "name": "diagnostics",
        "workspaceId": "[resourceID('Microsoft.OperationalInsights/workspaces',variables('logAnalyticsName'))]",
        "logAnalyticsDestinationType": "Dedicated",
        "logs": [
          {
            "category": "FrontdoorAccessLog",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }
          },
          {
            "category": "FrontdoorWebApplicationFirewallLog",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "timeGrain": "PT1M",
            "enabled": true,
            "retentionPolicy": {
              "enabled": false,
              "days": 0
            }
          }
        ]
      }
    }
  ],
  "outputs": {}
}